{"name": "Test Delete non existent Group", "status": "failed", "statusDetails": {"message": "AssertionError: Expected headers {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '580', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 18:03:27 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '2875117304388402548', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'x-ratelimit-limit': '100', 'x-ratelimit-remaining': '97', 'x-ratelimit-reset': '1751306616', 'X-Cache': 'Miss from cloudfront', 'Via': '1.1 d57b2a5738f58b3120f0223cecca8c6c.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'rsSrb_TdcEyMzZajFVlH5LyluHjbXdQ_ag3A4FlvXxWMLQbef7Yrtw=='}, but got {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '59', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:21:35 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '6062981510803411231', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'X-Cache': 'Error from cloudfront', 'Via': '1.1 5343e28419a407f9ee6b620572471578.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'L6gr3vh--PmzvmGCoYnowi8Sobovo3y5Vin_jLKomSPOOlDymYH18w=='}", "trace": "self = <src.api.groups.test_groups.TestGroups object at 0x000001E3F03867E0>, log_test_name = None\n\n    @pytest.mark.acceptance\n    @allure.title(\"Test Delete non existent Group\")\n    @allure.tag('functional', 'negative')\n    @allure.label(\"owner\", \"jessica.orihuela\")\n    def test_delete_nonexistent_group(self, log_test_name):\n        \"\"\"\n        Method to delete a non-existent group.\n    \n        Args:\n            log_test_name (Fixture): Logs the name of the test being executed.\n        \"\"\"\n        LOGGER.info(\"Deleting group with ID:\")\n        # Call Endpoint\n        response = self.rest_client.send_request(\n            method='DELETE',\n            url=f\"{base_url}group/1245668\",\n            headers=headers\n        )\n        LOGGER.debug(\"RESPONSE: %s\", json.dumps(response[\"body\"], indent=4))\n        LOGGER.debug(\"STATUS CODE: %s\", response[\"status_code\"])\n        # Assertion\n>       self.validate_response.validate_response(response, \"delete_non_existent_group\")\n\nsrc\\api\\groups\\test_groups.py:258: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelper\\validate_response.py:16: in validate_response\n    self.validate_value(actual_response['headers'], expected_response[\"headers\"], 'headers')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <helper.validate_response.ValidateResponse object at 0x000001E3F02BE840>\nactual_value = {'Alt-Svc': 'h3=\":443\"; ma=86400', 'Connection': 'keep-alive', 'Content-Length': '59', 'Content-Type': 'application/json; charset=utf-8', ...}\nexpected_value = {'Alt-Svc': 'h3=\":443\"; ma=86400', 'Connection': 'keep-alive', 'Content-Length': '580', 'Content-Type': 'application/json; charset=utf-8', ...}, key_compare = 'headers'\n\n    def validate_value(self, actual_value, expected_value, key_compare):\n        if key_compare == 'status_code':\n            assert actual_value == expected_value, f\"Expected status code {expected_value}, but got {actual_value}\"\n        elif key_compare == 'headers':\n            # LOGGER.debug(f\"Expected headers: {json.dumps(expected_value, indent=4)}\")\n            # LOGGER.debug(f\"Actual headers: {json.dumps(actual_value, indent=4)}\")\n>           assert expected_value.keys() <= actual_value.keys(), f\"Expected headers {expected_value}, but got {actual_value}\"\nE           AssertionError: Expected headers {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '580', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 18:03:27 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '2875117304388402548', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'x-ratelimit-limit': '100', 'x-ratelimit-remaining': '97', 'x-ratelimit-reset': '1751306616', 'X-Cache': 'Miss from cloudfront', 'Via': '1.1 d57b2a5738f58b3120f0223cecca8c6c.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'rsSrb_TdcEyMzZajFVlH5LyluHjbXdQ_ag3A4FlvXxWMLQbef7Yrtw=='}, but got {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '59', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:21:35 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '6062981510803411231', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'X-Cache': 'Error from cloudfront', 'Via': '1.1 5343e28419a407f9ee6b620572471578.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'L6gr3vh--PmzvmGCoYnowi8Sobovo3y5Vin_jLKomSPOOlDymYH18w=='}\n\nhelper\\validate_response.py:24: AssertionError"}, "description": "\n        Method to delete a non-existent group.\n        \n        Args:\n            log_test_name (Fixture): Logs the name of the test being executed.\n        ", "attachments": [{"name": "stderr", "source": "bfbb232a-9853-4665-add9-939a3710fc8d-attachment.txt", "type": "text/plain"}], "start": 1751318494753, "stop": 1751318496042, "uuid": "5701c5be-4e45-4605-b044-efc46498ec9c", "historyId": "ae0876aa4c043f13ba08b5e54d7531f9", "testCaseId": "ae0876aa4c043f13ba08b5e54d7531f9", "fullName": "src.api.groups.test_groups.TestGroups#test_delete_nonexistent_group", "labels": [{"name": "tag", "value": "functional"}, {"name": "tag", "value": "negative"}, {"name": "owner", "value": "jessica.orihuela"}, {"name": "tag", "value": "acceptance"}, {"name": "parentSuite", "value": "src.api.groups"}, {"name": "suite", "value": "test_groups"}, {"name": "subSuite", "value": "TestGroups"}, {"name": "host", "value": "JORIHUELAR-NH01"}, {"name": "thread", "value": "9744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.api.groups.test_groups"}]}