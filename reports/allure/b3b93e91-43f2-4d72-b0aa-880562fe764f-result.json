{"name": "Test Get All Groups", "status": "failed", "statusDetails": {"message": "AssertionError: Expected headers {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '59', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:18:22 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '1039035264496367493', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'X-Cache': 'Error from cloudfront', 'Via': '1.1 26e40a330b4c3cc9642637f33b3feec4.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'qxlqbNOVqwbl_BtnhG0yCjXipgmr6VEPrxobGmYMB5af8sFYujTOcg=='}, but got {'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:21:33 GMT', 'x-ratelimit-reset': '1751318548', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin, accept-encoding', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '588146685195165264', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'x-ratelimit-limit': '100', 'x-ratelimit-remaining': '87', 'content-encoding': 'gzip', 'X-Cache': 'Miss from cloudfront', 'Via': '1.1 5343e28419a407f9ee6b620572471578.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': '5Xq29CI73h7lp_FjhX7GL-AUlwp0RJeklDt69Kz0CT88h2PCvrd8iA=='}", "trace": "self = <src.api.groups.test_groups.TestGroups object at 0x000001E3F0385B80>, log_test_name = None\n\n    @pytest.mark.functional\n    @allure.title(\"Test Get All Groups\")\n    @allure.tag('functional')\n    @allure.label(\"owner\", \"jessica.orihuela\")\n    def test_get_all_groups(self, log_test_name):\n        \"\"\"\n        Method to get all groups for a team.\n    \n        Args:\n            create_group (Fixture): Creates a group and returns its ID.\n            log_test_name (Fixture): Logs the name of the test being executed.\n        \"\"\"\n        LOGGER.info(\"Getting group with ID: %s\")\n        # Call Endpoint\n        response = self.rest_client.send_request(\n            method='GET',\n            url=f\"{base_url}/group?team_id={team_id}\",\n            headers=headers\n        )\n        LOGGER.debug(\"RESPONSE: %s\", json.dumps(response[\"body\"], indent=4))\n        LOGGER.debug(\"STATUS CODE: %s\", response[\"status_code\"])\n        # Assertion\n>       self.validate_response.validate_response(response, \"get_all_groups\")\n\nsrc\\api\\groups\\test_groups.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nhelper\\validate_response.py:16: in validate_response\n    self.validate_value(actual_response['headers'], expected_response[\"headers\"], 'headers')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <helper.validate_response.ValidateResponse object at 0x000001E3F02BE840>\nactual_value = {'Alt-Svc': 'h3=\":443\"; ma=86400', 'Connection': 'keep-alive', 'Content-Type': 'application/json; charset=utf-8', 'Date': 'Mon, 30 Jun 2025 21:21:33 GMT', ...}\nexpected_value = {'Alt-Svc': 'h3=\":443\"; ma=86400', 'Connection': 'keep-alive', 'Content-Length': '59', 'Content-Type': 'application/json; charset=utf-8', ...}, key_compare = 'headers'\n\n    def validate_value(self, actual_value, expected_value, key_compare):\n        if key_compare == 'status_code':\n            assert actual_value == expected_value, f\"Expected status code {expected_value}, but got {actual_value}\"\n        elif key_compare == 'headers':\n            # LOGGER.debug(f\"Expected headers: {json.dumps(expected_value, indent=4)}\")\n            # LOGGER.debug(f\"Actual headers: {json.dumps(actual_value, indent=4)}\")\n>           assert expected_value.keys() <= actual_value.keys(), f\"Expected headers {expected_value}, but got {actual_value}\"\nE           AssertionError: Expected headers {'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '59', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:18:22 GMT', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '1039035264496367493', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'X-Cache': 'Error from cloudfront', 'Via': '1.1 26e40a330b4c3cc9642637f33b3feec4.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': 'qxlqbNOVqwbl_BtnhG0yCjXipgmr6VEPrxobGmYMB5af8sFYujTOcg=='}, but got {'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Date': 'Mon, 30 Jun 2025 21:21:33 GMT', 'x-ratelimit-reset': '1751318548', 'x-received-from': 'shard-prod-us-east-2-1', 'Server': 'nginx', 'x-dns-prefetch-control': 'off', 'expect-ct': 'max-age=0', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'x-download-options': 'noopen', 'x-content-type-options': 'nosniff', 'x-permitted-cross-domain-policies': 'none', 'x-xss-protection': '0', 'vary': 'Origin, accept-encoding', 'access-control-allow-credentials': 'true', 'access-control-expose-headers': 'x-datadog-trace-id,server', 'x-datadog-trace-id': '588146685195165264', 'content-security-policy': \"frame-ancestors 'self'\", 'cache-control': 'no-cache, no-store', 'pragma': 'no-cache', 'expires': '0', 'x-ratelimit-limit': '100', 'x-ratelimit-remaining': '87', 'content-encoding': 'gzip', 'X-Cache': 'Miss from cloudfront', 'Via': '1.1 5343e28419a407f9ee6b620572471578.cloudfront.net (CloudFront)', 'X-Amz-Cf-Pop': 'LIM50-P2', 'Alt-Svc': 'h3=\":443\"; ma=86400', 'X-Amz-Cf-Id': '5Xq29CI73h7lp_FjhX7GL-AUlwp0RJeklDt69Kz0CT88h2PCvrd8iA=='}\n\nhelper\\validate_response.py:24: AssertionError"}, "description": "\n        Method to get all groups for a team.\n        \n        Args:\n            create_group (Fixture): Creates a group and returns its ID.\n            log_test_name (Fixture): Logs the name of the test being executed.\n        ", "attachments": [{"name": "stderr", "source": "f63ff54a-c61a-40f2-8361-ec260f4e58a2-attachment.txt", "type": "text/plain"}], "start": 1751318493458, "stop": 1751318493777, "uuid": "61c29bc5-9af3-4e4d-8092-a5c19d37f36f", "historyId": "479d97edae65e2698a7f8d8c090d3a1c", "testCaseId": "479d97edae65e2698a7f8d8c090d3a1c", "fullName": "src.api.groups.test_groups.TestGroups#test_get_all_groups", "labels": [{"name": "tag", "value": "functional"}, {"name": "owner", "value": "jessica.orihuela"}, {"name": "tag", "value": "functional"}, {"name": "parentSuite", "value": "src.api.groups"}, {"name": "suite", "value": "test_groups"}, {"name": "subSuite", "value": "TestGroups"}, {"name": "host", "value": "JORIHUELAR-NH01"}, {"name": "thread", "value": "9744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.api.groups.test_groups"}]}